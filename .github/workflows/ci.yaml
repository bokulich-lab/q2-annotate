# name: CI
# on:
#   pull_request:
#     branches: ["main"]
#   push:
#     branches: ["main"]
#
# jobs:
#   test:
#     environment: dev
#     runs-on: ubuntu-latest
#     outputs:
#       latest-dev-tag: ${{ steps.fetch_latest_tags.outputs.latest-dev-tag }}
#       latest-stable-tag: ${{ steps.fetch_latest_tags.outputs.latest-stable-tag }}
#     steps:
#       - uses: actions/checkout@v4
#
#       - name: Checkout utilities
#         uses: actions/checkout@v4
#         with:
#           repository: bokulich-lab/utilities
#           token: ${{ secrets.BOTULICH_TOKEN }}
#           path: utilities
#
#       - name: Install dependencies
#         run: python -m pip install requests
#
#       - name: Fetch latest tags
#         id: fetch-tags
#         run: |
#           latest_tags=$(python utilities/ci/get-tags.py)
#           echo "$latest_tags" > tags.txt
#           echo "latest-dev-tag=$(grep 'latest-dev-tag' tags.txt | cut -d '=' -f 2)" >> $GITHUB_OUTPUT
#           echo "latest-stable-tag=$(grep 'latest-stable-tag' tags.txt | cut -d '=' -f 2)" >> $GITHUB_OUTPUT
#
#       - name: Create conda yaml
#         run: |
#           bash utilities/ci/get-dependencies.sh ${{ vars.DISTRO }} ${{ steps.fetch-tags.outputs.latest-dev-tag }}
#           cat environment.yml
#
#       - name: Setup miniconda
#         uses: conda-incubator/setup-miniconda@v3
#         with:
#           python-version: 3.8
#           mamba-version: "*"
#           channels: conda-forge,defaults
#           channel-priority: true
#           activate-environment: conda-env
#           condarc-file: utilities/ci/condarc
#           # use-only-tar-bz2: true
#
#       - name: Get date
#         id: get-date
#         run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
#         shell: bash
#
#       - name: Cache Conda env
#         uses: actions/cache@v3
#         with:
#           path: /usr/share/miniconda/envs
#           key:
#             conda-${{ runner.os }}--${{ runner.arch }}--${{
#             steps.get-date.outputs.today }}-${{
#             hashFiles('environment.yml') }}-${{ env.CACHE_NUMBER
#             }}
#         env:
#           # Increase this value to reset cache if environment.yml has not changed
#           CACHE_NUMBER: 0
#         id: cache
#
#       - name: Update environment
#         run:
#           mamba env update -n conda-env -f environment.yml
#         if: steps.cache.outputs.cache-hit != 'true'
#
#       - name: Install plugin
#         run: pip install .
#
#       - name: Install dev dependencies
#         run: pip install pytest coverage
#
#       - name: Run tests
#         run: make test-cov
#
#       - uses: codecov/codecov-action@v4
#         name: Upload coverage report
#         with:
#           files: ./coverage.xml
#           fail_ci_if_error: true
#         env:
#           CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
